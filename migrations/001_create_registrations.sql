-- Enable required extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create the exec_sql function for running dynamic SQL
CREATE OR REPLACE FUNCTION exec_sql(sql text)
RETURNS void AS $$
BEGIN
  EXECUTE sql;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Grant necessary permissions
GRANT USAGE ON SCHEMA public TO postgres, anon, authenticated, service_role;
GRANT ALL ON ALL TABLES IN SCHEMA public TO postgres, anon, authenticated, service_role;
GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO postgres, anon, authenticated, service_role;
GRANT EXECUTE ON FUNCTION exec_sql TO postgres, anon, authenticated, service_role;

-- Create the registrations table
CREATE TABLE IF NOT EXISTS registrations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  andrewID TEXT NOT NULL UNIQUE,
  age INTEGER NOT NULL,
  organization TEXT NOT NULL,
  paymentMethod TEXT NOT NULL,
  paymentConfirmed TEXT NOT NULL,
  status TEXT NOT NULL,
  createdAt TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, now()) NOT NULL,
  price NUMERIC,
  qrCode TEXT
);

-- Create indexes
CREATE INDEX IF NOT EXISTS idx_registrations_andrewid ON registrations(andrewID);
CREATE INDEX IF NOT EXISTS idx_registrations_status ON registrations(status);
CREATE INDEX IF NOT EXISTS idx_registrations_organization ON registrations(organization);

-- Enable Row Level Security
ALTER TABLE registrations ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows all operations for authenticated users
CREATE POLICY "Enable all operations for authenticated users" ON registrations
  FOR ALL
  TO authenticated
  USING (true)
  WITH CHECK (true);

-- Create a policy that allows read-only access for anonymous users
CREATE POLICY "Enable read-only access for anonymous users" ON registrations
  FOR SELECT
  TO anon
  USING (true);

